version: '3.8'

services:
  # Database service (internal only, not exposed)
  mongodb:
    image: mongo:7.0  # Use specific version, not latest
    container_name: medical_records_mongo_prod
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME_FILE: /run/secrets/mongo_root_username
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongo_root_password
      MONGO_INITDB_DATABASE: medical_records
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
    networks:
      - medical_records_network
    secrets:
      - mongo_root_username
      - mongo_root_password
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backend API service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: production  # We'll add multi-stage build
    container_name: medical_records_backend_prod
    restart: always
    ports:
      - "4081:8000"
    environment:
      - MONGODB_URL_FILE=/run/secrets/mongodb_url
      - JWT_SECRET_KEY_FILE=/run/secrets/jwt_secret
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30  # Shorter for production
      - PYTHONPATH=/app
      - ENVIRONMENT=production
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - medical_records_network
    secrets:
      - mongodb_url
      - jwt_secret
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        - NODE_ENV=production
    container_name: medical_records_frontend_prod
    restart: always
    ports:
      - "4080:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:4081
      - HOSTNAME=0.0.0.0
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - medical_records_network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx reverse proxy (production best practice)
  nginx:
    image: nginx:1.25-alpine
    container_name: medical_records_nginx_prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - medical_records_network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'
        reservations:
          memory: 64M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Secrets management
secrets:
  mongo_root_username:
    file: ./secrets/mongo_root_username.txt
  mongo_root_password:
    file: ./secrets/mongo_root_password.txt
  mongodb_url:
    file: ./secrets/mongodb_url.txt
  jwt_secret:
    file: ./secrets/jwt_secret.txt

volumes:
  mongodb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/medical_records/data/mongodb
  uploads_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/medical_records/data/uploads
  nginx_logs:
    driver: local

networks:
  medical_records_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 